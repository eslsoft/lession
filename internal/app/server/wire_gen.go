// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"github.com/eslsoft/lession/internal/adapter/db"
	"github.com/eslsoft/lession/internal/adapter/transport"
	"github.com/eslsoft/lession/internal/usecase"
)

import (
	_ "github.com/lib/pq"
)

// Injectors from wire.go:

// InitializeServer sets up the full HTTP server with all dependencies wired.
func InitializeServer() (*Server, error) {
	config, err := NewConfig()
	if err != nil {
		return nil, err
	}
	client, err := NewEntClient(config)
	if err != nil {
		return nil, err
	}
	lessonRepository := db.NewLessonRepository(client)
	lessonService := usecase.NewLessonService(lessonRepository)
	lessonHandler := transport.NewLessonHandler(lessonService)
	handler := NewHTTPHandler(lessonHandler)
	server := NewServer(config, handler, client)
	return server, nil
}
